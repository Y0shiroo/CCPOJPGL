import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JLabel;
import javax.swing.ImageIcon;
import java.awt.CardLayout;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;
import java.io.File;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class Applicant_Process {

    public JFrame ApplicantProcess;
    public JPanel panel1;
    public JPanel panel2;
    public JPanel panel3;
    public JLayeredPane layeredPane;
    private JTable App_table;
    private DefaultTableModel model;
    private DefaultTableModel model2;

    //
    private JTextField searchField;
    private TableRowSorter<DefaultTableModel> sorter;
    private List<String[]> originalData;
    private Executive_Dash executiveDash;

    //
    private static final String FILE_PATH = "/Users/luiz/Library/Mobile Documents/com~apple~TextEdit/Documents/Job Posting.txt";
    private static final String APP_COUNT_FILE_PATH = "/Users/luiz/Library/Mobile Documents/com~apple~TextEdit/Documents/appcount.txt";
    private JTable table;

    /**
     * Launch the application.
     */
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Applicant_Process window = new Applicant_Process();
                    window.executiveDash = new Executive_Dash();
                    window.executiveDash.loadDataFromFile();
                    window.executiveDash.setVisible(true);
                    window.ApplicantProcess.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    // METHODS ====================================================================================

    // Loads Data from txt file to Available Positions Table
    private void loadDataFromFile() {
        try {
            File file = new File("/Users/luiz/Library/Mobile Documents/com~apple~TextEdit/Documents/Job Posting.txt");
            if (file.exists()) {
                BufferedReader br = new BufferedReader(new FileReader(file));
                String line;
                while ((line = br.readLine()) != null) {
                    String[] data = line.split(",");
                    model.addRow(data);
                }
                br.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // NEW
    private void loadDataFromFile2() {
        try {
            File file = new File(FILE_PATH);
            if (file.exists()) {
                BufferedReader reader = new BufferedReader(new FileReader(file));
                String line;
                while ((line = reader.readLine()) != null) {
                    String[] data = line.split(",");
                    if (data.length > 0) {
                        model2.addRow(data);
                    }
                }
                reader.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private List<String[]> getDataFromModel() {
        List<String[]> data = new ArrayList<>();
        for (int i = 0; i < model2.getRowCount(); i++) {
            String[] rowData = new String[model2.getColumnCount()];
            for (int j = 0; j < model2.getColumnCount(); j++) {
                rowData[j] = (String) model2.getValueAt(i, j);
            }
            data.add(rowData);
        }
        return data;
    }

    private void searchPositionCode(String query) {
        RowFilter<DefaultTableModel, Object> rf = null;
        try {
            rf = RowFilter.regexFilter(query, 0);
        } catch (java.util.regex.PatternSyntaxException e) {
            return;
        }
        sorter.setRowFilter(rf);
    }

    // END METHODS ====================================================================================

    /**
     * Create the application.
     */
    public Applicant_Process() {
        initialize();
    }

    /**
     * Initialize the contents of the frame.
     */
    private void initialize() {
        ApplicantProcess = new JFrame();
        ApplicantProcess.setTitle("Applicant Process");
        ApplicantProcess.setBounds(100, 100, 470, 450);
        ApplicantProcess.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        ApplicantProcess.getContentPane().setLayout(new CardLayout(0, 0));

        layeredPane = new JLayeredPane();
        ApplicantProcess.getContentPane().add(layeredPane, "name_101979784457800");
        layeredPane.setLayout(new CardLayout(0, 0));

        panel1 = new JPanel();
        layeredPane.add(panel1, "name_101979875416200");
        panel1.setLayout(null);

        JLabel lblNewLabel = new JLabel("Available Positions:");
        lblNewLabel.setBounds(10, 11, 178, 14);
        panel1.add(lblNewLabel);

        JScrollPane scrollPane = new JScrollPane();
        scrollPane.setBounds(10, 36, 434, 207);
        panel1.add(scrollPane);

        // Table to Display Available Positions
        App_table = new JTable();
        model = new DefaultTableModel(new Object[][]{}, new String[]{"Position Code", "Position Name", "Company Name", "Location", "Skills Required"}) {
            boolean[] columnEditables = new boolean[]{false, false, false, false, false};

            public boolean isCellEditable(int row, int column) {
                return columnEditables[column];
            }
        };
        App_table.setModel(model);
        scrollPane.setViewportView(App_table);

        // Load Data from File
        loadDataFromFile();

        // Add Search Field
        searchField = new JTextField();
        searchField.setBounds(10, 254, 178, 20);
        panel1.add(searchField);
        searchField.setColumns(10);

        // Apply Filter Button
        JButton btn_Search = new JButton("Search");
        btn_Search.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String query = searchField.getText();
                searchPositionCode(query);
            }
        });
        btn_Search.setBounds(197, 253, 89, 23);
        panel1.add(btn_Search);

        // Clear Filter Button
        JButton btn_Clear = new JButton("Clear");
        btn_Clear.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                searchField.setText("");
                sorter.setRowFilter(null);
            }
        });
        btn_Clear.setBounds(296, 253, 89, 23);
        panel1.add(btn_Clear);

        // Apply Button
        JButton btn_Apply = new JButton("Apply");
        btn_Apply.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                int selectedRow = App_table.getSelectedRow();
                if (selectedRow == -1) {
                    JOptionPane.showMessageDialog(ApplicantProcess, "Please select a position code to apply.", "No Selection", JOptionPane.WARNING_MESSAGE);
                } else {
                    String positionCode = (String) App_table.getValueAt(selectedRow, 0);
                    executiveDash.incrementApplicants(positionCode);
                    executiveDash.saveDataToFile();
                    JOptionPane.showMessageDialog(ApplicantProcess, "You have successfully applied for position code: " + positionCode, "Application Submitted", JOptionPane.INFORMATION_MESSAGE);
                    executiveDash.updateApplicants(positionCode);
                }
            }
        });
        btn_Apply.setBounds(197, 290, 89, 23);
        panel1.add(btn_Apply);

        // Go Back Button
        JButton btn_Back = new JButton("Back");
        btn_Back.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                layeredPane.removeAll();
                layeredPane.add(panel2);
                layeredPane.repaint();
                layeredPane.revalidate();
            }
        });
        btn_Back.setBounds(296, 290, 89, 23);
        panel1.add(btn_Back);

        panel2 = new JPanel();
        layeredPane.add(panel2, "name_101979943396700");
        panel2.setLayout(null);

        JLabel lblNewLabel_1 = new JLabel("Application Status");
        lblNewLabel_1.setBounds(10, 11, 178, 14);
        panel2.add(lblNewLabel_1);

        JScrollPane scrollPane_1 = new JScrollPane();
        scrollPane_1.setBounds(10, 36, 434, 207);
        panel2.add(scrollPane_1);

        // Table to Display Application Status
        table = new JTable();
        model2 = new DefaultTableModel(new Object[][]{}, new String[]{"Position Code", "Position Name", "Company Name", "Location", "Skills Required"}) {
            boolean[] columnEditables = new boolean[]{false, false, false, false, false};

            public boolean isCellEditable(int row, int column) {
                return columnEditables[column];
            }
        };
        table.setModel(model2);
        scrollPane_1.setViewportView(table);

        // Load Data from File
        loadDataFromFile2();

        // Go Back Button
        JButton btn_Back_1 = new JButton("Back");
        btn_Back_1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                layeredPane.removeAll();
                layeredPane.add(panel1);
                layeredPane.repaint();
                layeredPane.revalidate();
            }
        });
        btn_Back_1.setBounds(197, 254, 89, 23);
        panel2.add(btn_Back_1);

        panel3 = new JPanel();
        layeredPane.add(panel3, "name_101979984753800");
        panel3.setLayout(null);

        JLabel lblNewLabel_2 = new JLabel("");
        lblNewLabel_2.setIcon(new ImageIcon(Applicant_Process.class.getResource("/images/placeholder.png")));
        lblNewLabel_2.setBounds(10, 11, 414, 214);
        panel3.add(lblNewLabel_2);

        // Go Back Button
        JButton btn_Back_2 = new JButton("Back");
        btn_Back_2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                layeredPane.removeAll();
                layeredPane.add(panel2);
                layeredPane.repaint();
                layeredPane.revalidate();
            }
        });
        btn_Back_2.setBounds(197, 236, 89, 23);
        panel3.add(btn_Back_2);

        // Button to Display Image
        JButton btn_ViewImage = new JButton("View Image");
        btn_ViewImage.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                layeredPane.removeAll();
                layeredPane.add(panel3);
                layeredPane.repaint();
                layeredPane.revalidate();
            }
        });
        btn_ViewImage.setBounds(197, 202, 89, 23);
        panel2.add(btn_ViewImage);

        // Table Row Sorter
        sorter = new TableRowSorter<DefaultTableModel>(model);

        // Attach Sorter to Table
        App_table.setRowSorter(sorter);
    }
}
